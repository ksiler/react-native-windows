parameters:
  - name: buildEnvironment
    type: string
    default : PullRequest
    values: 
     - PullRequest 
     - Continuous 
  
jobs:
  - job: SampleApps
    variables:
      - template: ../variables/vs2019.yml
      - name: BuildLogDirectory
        value: $(Build.BinariesDirectory)\$(BuildPlatform)\$(BuildConfiguration)\BuildLogs
    displayName: Sample Apps
    strategy:
      matrix: # Why we only build some flavors: https://github.com/microsoft/react-native-windows/issues/4308
        # Start Continuous only
        ${{ if eq(parameters.buildEnvironment, 'Continuous') }}:
          ArmDebug:
            BuildConfiguration: Debug
            BuildPlatform: ARM
            NoDeployOption: --no-deploy # We don't have Arm agents
          ArmRelease:
            BuildConfiguration: Release
            BuildPlatform: ARM
            NoDeployOption: --no-deploy # We don't have Arm agents
          Arm64Debug:
            BuildConfiguration: Debug
            BuildPlatform: ARM64
            NoDeployOption: --no-deploy # We don't have Arm agents
          Arm64Release:
            BuildConfiguration: Release
            BuildPlatform: ARM64
            NoDeployOption: --no-deploy # We don't have Arm agents
          X64Debug:
            BuildConfiguration: Debug
            BuildPlatform: x64
            NoDeployOption:
        # End Continuous only
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          NoDeployOption:
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          NoDeployOption:
        # Start Continuous only
        ${{ if eq(parameters.buildEnvironment, 'Continuous') }}:
          X86Release:
            BuildConfiguration: Release
            BuildPlatform: x86
            NoDeployOption:
        # End Continuous only
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 5
    pool: $(AgentPool.Medium)

    steps:
      - checkout: self
        clean: false
        submodules: false

      - template: ../templates/prepare-env.yml

      - task: NuGetCommand@2
        displayName: NuGet restore - SampleApps
        inputs:
          command: restore
          restoreSolution: packages/sample-apps/windows/SampleApps.sln
          verbosityRestore: Detailed # Options: quiet, normal, detailed
        condition: succeeded()

      - task: CmdLine@2
        displayName: run-windows (Debug)
        inputs:
          script: yarn windows --no-packager --no-launch $(NoDeployOption) --arch $(BuildPlatform) --logging --buildLogDirectory $(BuildLogDirectory) --msbuildprops BaseIntDir=$(BaseIntDir)
          workingDirectory: packages/sample-apps
        condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Debug'))

      - task: CmdLine@2
        displayName: run-windows (Release)
        inputs:
          script: yarn windows --no-packager --no-launch $(NoDeployOption) --arch $(BuildPlatform) --logging --buildLogDirectory $(BuildLogDirectory) --release --msbuildprops BaseIntDir=$(BaseIntDir)
          workingDirectory: packages/sample-apps
        condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))

      - task: CmdLine@2
        displayName: Create SampleApp bundle
        inputs:
          script: yarn bundle-cpp --verbose
          workingDirectory: packages\sample-apps
        condition: succeeded()

      - template: ../templates/upload-build-logs.yml
        parameters:
          buildLogDirectory: '$(BuildLogDirectory)'
